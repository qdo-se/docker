- How to handle secrets (NO credentials at build time or in the image please!)

- Add version number as label inside the image

- Don’t use root user

- Only idempotent operations without external side effects in Dockerfile
  - "It shouldn’t matter if you build the same Dockerfile one time or a thousand times."

- Manage data and runtime configuration outside the containers and images
  - Container is supposed to be short-lived. It can be replaced anytime or run on different environments
  - Don’t try to login to container and make changes inside container

- Build image once and use the same image for different environments (dev, test, production)
  - Maybe we need a build system for images?

- Expose least ports possible

- Vet external images, only use Docker official images as base if possible

- Be aware of build context
  - Too much context can slow down the build process

- Use .dockerignore

- More best practices: https://docs.docker.com/develop/develop-images/dockerfile_best-practices/

- Use volume to persist data

- Use “--restart unless-stopped” for run so that docker can restart correctly in the event that servers reboot

- Run a single process per container

- Using COPY instead of ADD if there is no need to handle tar or remote URL
